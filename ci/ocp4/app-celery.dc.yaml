---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: bcgov-baserow-celery
parameters:
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: IS_NAMESPACE
    value: acf456-tools
  # - description: The OpenShift ImageStream name.
  #   displayName: Image Stream
  #   name: IS_NAME
  #   value: baserow-bcgov
  - description: Version of BaseRow app to be used (e.g. 1.13.3).
    displayName: Version of BaseRow
    name: IMAGE_TAG
    value: 1.13.3
  - description: The short-name of the BaseRow Service, lower-case with hyphen.
    displayName: BaseRow Acronym
    name: APP_NAME
    required: true
    value: test
  - description: The disk space reserved for media uploads.
    displayName: Media Folder size
    name: MEDIA_FOLDER_CAPACITY
    value: 64Mi    
  - name: CPU_LIMIT
    value: "200m"
  - name: MEMORY_LIMIT
    value: "512Mi"
  - name: CPU_REQUEST
    value: "50m"
  - name: MEMORY_REQUEST
    value: "200Mi"
objects:
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: "${APP_NAME}-baserow-app-media"
      labels:
        app: "${APP_NAME}-baserow"
    spec:
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: "${MEDIA_FOLDER_CAPACITY}"
      storageClassName: netapp-file-standard
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: "${APP_NAME}-baserow-celery"
      generation: 1
      labels:
        app: "${APP_NAME}-baserow"
      annotations: {}
    spec:
      strategy:
        type: Rolling
        rollingParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 600
          maxUnavailable: 25%
          maxSurge: 25%
        resources: {}
        activeDeadlineSeconds: 21600
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - "${APP_NAME}-baserow-celery"
            from:
              kind: ImageStreamTag
              namespace: ${IS_NAMESPACE}
              name: bcgov-baserow-backend:${IMAGE_TAG}
      replicas: 1
      revisionHistoryLimit: 10
      test: false
      selector:
        app: "${APP_NAME}-baserow"
        deploymentconfig: "${APP_NAME}-baserow-celery"
      template:
        metadata:
          name: "${APP_NAME}-baserow-celery"
          labels:
            app: "${APP_NAME}-baserow"
            deploymentconfig: "${APP_NAME}-baserow-celery"
          annotations: {}
        spec:
          volumes:
            - name: "${APP_NAME}-baserow-app-media"
              persistentVolumeClaim:
                claimName: "${APP_NAME}-baserow-app-media"
          containers:
            - name: "${APP_NAME}-baserow-celery"
              image: " "
              args:
              - celery
              - worker              
              ports:
                - containerPort: 8000
                  protocol: TCP
                - containerPort: 8443
                  protocol: TCP
              envFrom:
                - configMapRef:
                    name: "${APP_NAME}-baserow-configmap"
              env:
                - name: DATABASE_USER
                  valueFrom:
                    secretKeyRef:
                      name: "${APP_NAME}-baserow-postgresql"
                      key: database-user
                - name: DATABASE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: "${APP_NAME}-baserow-postgresql"
                      key: database-password
                - name: DB_NAME
                  valueFrom:
                    secretKeyRef:
                      name: "${APP_NAME}-baserow-postgresql"
                      key: database-name
                - name: DATABASE_HOST
                  value: "${APP_NAME}-baserow-postgresql"
                - name: DATABASE_PORT
                  value: "5432"
              resources:
                limits:
                  cpu: "${CPU_LIMIT}"
                  memory: "${MEMORY_LIMIT}"
                requests:
                  cpu: "${CPU_REQUEST}"
                  memory: "${MEMORY_REQUEST}"
              volumeMounts:
                - name: "${APP_NAME}-baserow-app-media"
                  mountPath: "/baserow/media"
#                                    
              # livenessProbe:
              #   httpGet:
              #     path: "/"
              #     port: 8000
              #     scheme: HTTP
              #   initialDelaySeconds: 60
              #   timeoutSeconds: 5
              #   periodSeconds: 30
              #   successThreshold: 1
              #   failureThreshold: 3
              readinessProbe:
                exec:
                  command:
                  - /bin/sh
                  - -i
                  - -c
                  - /baserow/backend/docker/docker-entrypoint.sh celery-worker-healthcheck
                failureThreshold: 3
                initialDelaySeconds: 20
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1  
              terminationMessagePath: "/dev/termination-log"
              terminationMessagePolicy: File
              imagePullPolicy: Always
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
